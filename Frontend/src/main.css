/* Useful links: */
/* Convert hex to CSS filter:  https://codepen.io/sosuke/pen/Pjoqqp  */
/* Color-contrast analyzer: https: //color.adobe.com/create/color-contrast-analyzer  */

/* This is the main css file used in the project. Should be imported after a css reset file */

@import url('https://fonts.googleapis.com/css2?family=Inter:wght@100;200;300;400;500;600;700;800;900&display=swap');
@import url('https://fonts.googleapis.com/css2?family=Inter+Tight:ital,wght@0,100;0,200;0,300;0,400;0,500;0,600;0,700;0,800;0,900;1,100;1,200;1,300;1,400;1,500;1,600;1,700;1,800;1,900&family=Inter:wght@100;200;300;400;500;600;700;800;900&display=swap');

/* Font: Inter Tight used for italics only: use html i tag in component */

:root {
    --BackgroudPrimary: #0d1618;
    --BackgroudSecondary: #111c1e;
    --BackgroudTertiary: #152325;
    --BackgroundDisabled: #384d4f;
    --BackgroundInput: #162427;
    --FontColorInput: #F0F0F0;
    --FontColorPrimary: #EBEBEB;
    --FontColorSecondary: #B3B3B3;
    --FontColorDarker: #3d515c;
    --FontColorDarkerFilter: invert(24%) sepia(40%) saturate(326%) hue-rotate(157deg) brightness(102%) contrast(85%);
    --FontColorDark: #0d1618;
    --BlueColour: #4B83E3;
    --MiddleBlueColour: #376073;
    --YellowColor: #DB9A02;
    --RedColor: #aa0000;

    font-family: 'Inter Tight', sans-serif;
    font-family: 'Inter', sans-serif;
    background-color: var(--BackgroudPrimary);
    color: var(--FontColorPrimary);
    font-synthesis: none;
    text-rendering: optimizeLegibility;
    -webkit-font-smoothing: antialiased;
    -moz-osx-font-smoothing: grayscale;
}

body {
    margin: 0;
    display: flex;
    min-width: 320px;
    min-height: 100vh;
    line-height: 1.4;
}

#root {
    flex: 1 0 100%;
    display: flex;
    flex-direction: column;
    justify-content: space-between;
}

#root>* {
    padding: 5px 20px;
}

#root>div {
    flex-grow: 1;
}

h2 {
    font-size: 1.7em;
    margin: 10px 0;
}

h3 {
    font-size: 1.4em;
    margin: 10px 0;
}

p,
label {
    font-size: 1em;
}

a {
    color: var(--BlueColour)
}

i {
    font-family: 'Inter Tight', sans-serif;
    font-style: italic;
}

button {
    font-family: 'Inter', sans-serif;
    font-size: 1em;
    font-weight: 600;
    padding: 7px 25px;
    background-color: var(--BlueColour);
    border: none;
    border-radius: 7px;
    box-shadow: #13202389 0px 7px 29px 0px;
    color: var(--FontColorDark);
    cursor: pointer;
}

@media (hover: hover) {
    button:hover {
        box-shadow: rgba(50, 50, 93, 0.25) 0px 30px 60px -12px inset, rgba(0, 0, 0, 0.3) 0px 18px 36px -18px inset;
    }
}

button:disabled {
    background-color: var(--BackgroundDisabled);
    border: 2px solid var(--BackgroudSecondary);
    color: var(--BackgroudPrimary);
    box-shadow: none;
}

input {
    font-family: 'Inter', sans-serif;
    font-size: 1em;
    border: none;
    border-radius: 7px;
    padding: 5px 10px;
    background-color: var(--BackgroundInput);
    color: var(--FontColorInput);
}

/* **********************************************************
*                                                           *
*                   SHARED CLASSES                          *
*                                                           *
*   Classes that can be used in any component for styling   *
*                                                           *
********************************************************** */


/* P-tag classes 
    - MAIN-error-message: used in p-tag. Messages have been wrapped in i-tags as well.
    - MAIN-information-text: used in p-tags. Text is darker as meant to be used as a 'ps' at bottom os page.
    => Usage example: SignUp component
*/
.MAIN-error-message {
    font-size: 0.9em;
    color: var(--YellowColor);
}

.MAIN-info-paragraph {
    color: var(--FontColorSecondary);
    margin: 15px 0;
}

/* Form-tag classes
    - MAIN-form: used in form-tags. For it to work, the form parent must have the following attributes: {
        display: flex; flex-direction: column;}, and form elements such as label and tags must be wrapped in a div with MAIN-form-display-table class. Error messages do not have to be placed in divs, and can be p tags bellow the div.
        Also recommended: "form parent">h2 {margin-bottom: 25px;} to style the component's page title
    - MAIN-form-display-table: using in divs which contain label&input tag pairs and are children of 
        .MAIN-form
    => Usage example: SignUp component
*/

.MAIN-form {
    align-self: start;
    display: flex;
    flex-direction: column;
    justify-content: flex-start;
}

.MAIN-form>* {
    margin-bottom: 15px;
    align-self: start;
}

.MAIN-form>button {
    margin-top: 15px;
    margin-bottom: 15px;
}

.MAIN-form-display-table {
    display: grid;
    grid-template-columns: 2fr 3fr;
    grid-gap: 10px;
}

@media (min-width: 600px) {
    .MAIN-form-display-table {
        grid-template-columns: 200px 300px;
    }
}

/* Table-tag classes
    - MAIN-table: used in table-tags. 
    - MAIN-table-label: used in label tags inside td-tags. a lable tag should be placed inside td tags with the column's title in them. This will be used in mobile versions. See example in Admin>UsersTable>UsersTableRow component
    => Usage example: Admin > UsersTable > UsersTable component
    => Don't forget to adjust grid-template-columns in the component's own css to properly size the columns according to the number of table columns. div
*/

.MAIN-table {
    margin-top: 20px !important;
    border-collapse: collapse;
    border-radius: 5px;
    -moz-border-radius: 5px;
    -webkit-border-radius: 5px;
    border-style: hidden;
    box-shadow: 0 0 0 2px var(--FontColorDarker);
}

.MAIN-table>thead>tr>th,
.MAIN-table>tbody>tr>td {
    padding: 5px;
}

.MAIN-table>tbody>tr:nth-of-type(even) {
    background-color: var(--BackgroudSecondary);
}

@media (hover: hover) {
    .MAIN-table>tbody>tr:hover {
        background-color: var(--BackgroudTertiary);
    }
}

/* TABLE ON MOBILE/SMALL DEVICES ONLY */

.MAIN-table,
.MAIN-table>thead,
.MAIN-table>tbody,
.MAIN-table>thead>tr,
.MAIN-table>thead>tr>th,
.MAIN-table>tbody>tr>td {
    display: block;
}

/* Hide table headers (but not display: none;, for accessibility) */
.MAIN-table>thead>tr {
    position: absolute;
    top: -9999px;
    left: -9999px;
}

.MAIN-table>tbody {
    display: flex;
    flex-direction: column;
    gap: 5px;
}

.MAIN-table>tbody>tr {
    margin: 5px;
    border: 3px solid var(--BackgroudTertiary);
    border-radius: 5px;
}

.MAIN-table>tbody>tr>td {
    /* Make behave  like a "row" */
    border-bottom: 2px solid var(--BackgroudTertiary);
    position: relative;
    display: grid;
    /* grid-template-columns => adapt in component's own css as needed */
    grid-template-columns: 6em auto
}

.MAIN-table-label {
    font-weight: bold;
    padding-right: 5px;
    display: flex;
    align-items: center;
    justify-content: flex-start;
    color: var(--FontColorSecondary);
}

/* TABLE ON BIG SCREENS */
@media only screen and (min-width:600px) {

    .MAIN-table,
    .MAIN-table>thead,
    .MAIN-table>tbody,
    .MAIN-table>thead>tr,
    .MAIN-table>thead>tr>th,
    .MAIN-table>tbody>tr,
    .MAIN-table>tbody>tr>td {
        margin: 0;
        padding: 0;
        border: none;
        display: revert;
        position: revert;
    }

    .MAIN-table,
    .MAIN-table>thead,
    .MAIN-table>tbody {
        display: flex;
        flex-direction: column;
        gap: 0;
    }

    .MAIN-table>thead>tr,
    .MAIN-table>tbody>tr {
        padding: 5px;
        display: grid;
        grid-template-columns: auto repeat(4, 10em);
        justify-items: stretch;
        align-items: center;
        gap: 0 5px;
        border-bottom: 2px solid var(--FontColorDarker);
        border-radius: 0;
    }

    .MAIN-table>thead>tr {
        background-color: var(--BackgroundInput);
    }

    .MAIN-table>thead>tr>th {
        text-align: start;
        font-weight: bold;
    }

    .MAIN-table-label {
        display: none;
    }
}